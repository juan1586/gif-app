{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","components/helpers/getImages.js","components/GitGrid.js","components/hooks/useFetchGif.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","imputValue","setimputValue","onSubmit","e","preventDefault","cats","type","placeholder","value","onChange","target","className","GifGridItem","id","title","url","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","images","downsized_medium","GitGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGif","GifExpertApp","setCategory","categories","cat","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAE1B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAWA,OACI,sBAAMC,SANU,SAACC,GACjBA,EAAEC,iBACFN,GAAc,SAAAO,GAAI,OAAML,GAAN,mBAAqBK,QAIvC,SAEI,uBACIC,KAAK,OACLC,YAAY,aACZC,MAAQR,EACRS,SAhBc,SAACN,GACvBF,EAAcE,EAAEO,OAAOF,QAgBfG,UAAU,oC,QCtBbC,EAAc,SAAC,GAAwB,EAArBC,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IACtC,OACI,mCACI,sBAAKJ,UAAU,6CAAf,UACI,qBAAKK,IAAOD,EAAME,IAAOH,IACvBA,Q,uBCPLI,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DAEbL,EAFa,iDAEoCM,UAAWF,GAF/C,8DAIAG,MAAOP,GAJP,cAIbQ,EAJa,gBAKIA,EAAKC,OALT,uBAKXC,EALW,EAKXA,KAGFC,EAAOD,EAAKE,KAAI,SAAAC,GAClB,MAAO,CACHf,GAAIe,EAAIf,GACRC,MAAOc,EAAId,MACXC,IAAKa,EAAIC,OAAOC,iBAAiBf,QAZtB,kBAiBZW,GAjBY,4CAAH,sDCIPK,EAAU,SAAC,GAAkB,IAGtC,ECHuB,SAAEZ,GAEzB,MAA0BpB,mBAAS,CAChC0B,KAAM,GACNO,SAAS,IAFZ,mBAAOC,EAAP,KAAcC,EAAd,KAoBA,OAfAC,qBAAU,WAENjB,EAASC,GAAWiB,MAAM,SAAAC,GAEtBC,YAAW,WACPJ,EAAS,CACLT,KAAMY,EACNL,SAAS,MAEd,UAGR,CAACb,IAGGc,EDnB0BM,CAHI,EAAfpB,UAGRU,EAAd,EAAQJ,KAAcO,EAAtB,EAAsBA,QAEtB,OACI,qCAEI,qBAAKrB,UAAU,UAAf,SAEIqB,GAAW,aAIf,qBAAKrB,UAAU,WAAf,SAGQkB,EAAOF,KAAI,SAACC,GAAD,OACP,cAAC,EAAD,eAESA,GADEA,EAAIf,aElB1B2B,EAAe,SAACC,GAG3B,MAAoC1C,mBAAS,CAAC,SAA9C,mBAAO2C,EAAP,KAAmB5C,EAAnB,KAEA,OACI,qCACE,oBAAIa,UAAU,OAAd,sCACA,cAAC,EAAD,CAAab,cAAkBA,IAC/B,uBAEI4C,EAAWf,KAAK,SAACgB,GACf,OAAO,qCAAoB,cAAC,EAAD,CAASxB,SAAUwB,MAA1BA,UCZlCC,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.cd967202.chunk.js","sourcesContent":["import React , {useState}from 'react';\r\nimport  PropTypes  from \"prop-types\";\r\n\r\nexport const AddCategory = ( {setCategories} ) => {\r\n\r\n    const [imputValue, setimputValue] = useState('');\r\n\r\n    const handleInputChange = (e)=>{\r\n        setimputValue(e.target.value);\r\n    };\r\n\r\n    const hadleSubmit = (e) =>{\r\n        e.preventDefault();\r\n        setCategories(cats =>[  imputValue, ...cats ]);\r\n    }\r\n\r\n    return (\r\n        <form onSubmit = { hadleSubmit}> \r\n            {/* <p> { imputValue } </p> */}\r\n            <input \r\n                type=\"text\"\r\n                placeholder=\"Buscar gif\"\r\n                value= {imputValue}\r\n                onChange = {handleInputChange}\r\n                className=\"form-control form-control-sm\"\r\n            />\r\n        </form>\r\n    )\r\n};\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ( { id, title, url} ) => {\r\n    return (\r\n        <>\r\n            <div className=\"card animate__animated animate__backInLeft\">\r\n                <img src= { url } alt= { title } />\r\n                { title }\r\n            </div>\r\n        </>\r\n\r\n       \r\n    )\r\n}\r\n","export const getGifs = async ( category )=>{\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category )}&limit=3&api_key=abDpaEKgvf5LL8fWyVVJPSz9U9eQEM39`;\r\n\r\n    const resp = await fetch( url );\r\n    const { data } = await resp.json();\r\n\r\n\r\n    const gifs = data.map(img =>{\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images.downsized_medium.url\r\n        }\r\n    });\r\n\r\n\r\n    return gifs;\r\n\r\n}","import React from 'react'\r\nimport { GifGridItem } from './GifGridItem';\r\nimport { useFetchGif } from './hooks/useFetchGif';\r\n\r\nexport const GitGrid = ({ category }) => {\r\n\r\n   \r\n    const { data: images ,loading} = useFetchGif( category );\r\n\r\n    return (\r\n        <>\r\n\r\n            <div className=\"loading\">\r\n                {\r\n                loading && 'Cargando'\r\n                }\r\n            </div>\r\n\r\n            <div className=\"car-grid\">\r\n            \r\n                {\r\n                    images.map((img) =>(\r\n                        <GifGridItem \r\n                            key= { img.id }\r\n                            { ...img }\r\n                        />\r\n                    ))\r\n                }\r\n                \r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","\r\nimport  { useEffect, useState } from 'react'\r\nimport { getGifs } from '../helpers/getImages';\r\n\r\nexport const useFetchGif = ( category ) => {\r\n   \r\n    const [state, setState] = useState({\r\n       data: [],\r\n       loading: true    \r\n    });\r\n\r\n    useEffect(() => {\r\n        \r\n        getGifs( category ).then( imgs =>{\r\n\r\n            setTimeout(() => {\r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                });\r\n            }, 1000);\r\n        })\r\n\r\n    }, [category])\r\n\r\n\r\n    return state;\r\n}\r\n","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GitGrid } from './components/GitGrid';\r\n\r\n\r\nexport const GifExpertApp = (setCategory) => {\r\n\r\n\r\n  const [categories, setCategories] = useState(['goku']);\r\n\r\n  return (\r\n      <>\r\n        <h2 className=\"text\">GifApp Melito Caramelito</h2>\r\n        <AddCategory setCategories = { setCategories }/>\r\n        <hr></hr>  \r\n          {\r\n            categories.map( (cat ) =>{\r\n              return <span key ={ cat }> <GitGrid category={cat}/></span>\r\n            })\r\n          }\r\n      </>\r\n  )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { GifExpertApp } from './GifExpertApp';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}